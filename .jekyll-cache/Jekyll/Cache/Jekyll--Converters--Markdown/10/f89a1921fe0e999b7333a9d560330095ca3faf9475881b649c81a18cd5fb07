I"–<p class="notice--warning"><strong>Be advised</strong> This post is quite old (22 Aug 2012) and any code may be out of date. Proceed with caution.</p>

<p>I've procrastinated on this project post far too long! I've had the Heat Seeking Robot working at aÂ <em>veryÂ </em> primitive level for over a month now, and posted NOTHING. For this, I am sorry.</p>
<p>So this is Part 1.5, where Part 2 was supposed to be the ultimate conclusion to the project. Here's where we're at so far: we have a working IR Thermometer reporting temperature readings to an Arduino board from <a title="Arduino Project 1: Heat Seeking Robot (PartÂ 1)" href="/arduino-project-1-heat-seeking-robot-part-1/" target="_blank">Part 1</a>. From there, I removed the IR thermometer from the breadboard, and pushed the four pins through one of the servo armatures (the white plus sign shaped object on top of the blue servo). As a throw-away proof-of-concept build, I just used double sided tape to attach the servo to the bread board (this will make more sense later).</p>

<figure>
  <a href="https://www.alexdglover.com/assets/imag0118.jpg"><img class="size-full wp-image-116" title="Servo and IR Thermometer Mounted on Breadboard" src="/assets/imag0118.jpg" alt="Servo and IR Thermometer Mounted on Breadboard" width="600" height="358" /></a>
  <figcaption><a href="https://www.alexdglover.com/assets/imag0118.jpg">Servo and IR Thermometer Mounted on Breadboard</a></figcaption>
</figure>

<p>I then pushed the jumper wires into the same servo armatures, originally intending to solder the wires, but it's actually a pretty good connection! I wired up the servo and then combined the IR thermometer sketch with the example sketch 'sweep.' Sweep is a simple servo sketch that makes a servo turn back and forth. Now I could get temperature readings as the thermometer turned back and forth. Not bad so far.</p>
<p style="text-align: center;"><a href="http://29.media.tumblr.com/tumblr_lltzgnHi5F1qzib3wo1_400.jpg"><img class="aligncenter" title="Not Bad" src="http://i.imgur.com/BNrEdQ8.png" alt="Not Bad" width="288" height="288" /></a></p>

<p>I assembled the Tamiya Tracked Chassis and the double gearbox (with a 37.5x1 gear ratio). The Tamiya chassis kit includes a battery mount for two AA batteries, but I used two 9v batteries instead for space-saving reasons. The battery mount is mounted in the middle of the chassis, which uses up a fair amount of space. By using 2 9v batteries sitting side by side, I got a simple and efficient way to have two mobile power supplies. I also attached some jumper wires to the two motors (two wires per motor, ground and positive; see the white and black wires on the top motor, blue and orange wires on the bottom motor).</p>

<figure>
  <a href="https://www.alexdglover.com/assets/imag0064.jpg"><img class="size-full wp-image-115" title="Assembled Tamiya Tracked Vehicle Chassis" src="/assets/imag0064.jpg" alt="Assembled Tamiya Tracked Vehicle Chassis" width="600" height="358" /></a>
  <figcaption><a href="https://www.alexdglover.com/assets/imag0064.jpg">Assembled Tamiya Tracked Vehicle Chassis</a></figcaption>
</figure>

<p>Attached the DF Robot motor shield to the Arduino board. Keep in mind that our connections for the IR thermometer from Part 1 will have to plugged into the corresponding connections on the motor shield. The motor shield transparently connects to the Arduino for all of the analog slots, as well as the 5v, 3v3, and GND connections on the DC connection side of the board (as opposed to the ethernetÂ connection side of the board). Black circuit board is the motor shield, blue board is the Arduino. The pink foam is some packaging foam I got when I ordered these supplies that I use to make sure the board doesn't get shorted when touching the metal battery exterior. May not be necessary, but hey, better safe than sorry.</p>

<figure>
  <a href="https://www.alexdglover.com/assets/imag0139.jpg"><img class="size-full wp-image-117" title="Arduino and Motor Shield" src="/assets/imag0139.jpg" alt="Arduino and Motor Shield" width="600" height="358" /></a>
  <figcaption><a href="https://www.alexdglover.com/assets/imag0139.jpg">Arduno and Motor Shield</a></figcaption>
</figure>

<p>As you can see in the above picture, we're using mostly the same pins, just on the motor shield now and not directly on the Arduino. One thing I should have mentioned much much earlier: generally, when you have motors or other devices that consume a fair amount of power (relative to the Arduino), you will want two (or more) separate power sources, one specifically for the Arduino, and separate power sources for the motors. I used one of the male DC plug to 9v battery clips I bought to connect the Arduino and one of the 9v batteries. I used the other 9v battery to power the two DC motors. See the picture below; you'll need to connect your secondary power source (for the motors in this case) to the power-in connections you see on the right. Similarly, each AC motor needs to have a V-in and GND connected to the two green connection blocks in the middle of the picture.</p>

<figure>
  <a href="https://www.alexdglover.com/assets/imag0123.jpg"><img class="size-full wp-image-118" title="Motor Shield Power and Motor Connections" src="/assets/imag0123.jpg" alt="Motor Shield Power and Motor Connections" width="600" height="1003" /></a>
  <figcaption><a href="https://www.alexdglover.com/assets/imag0123.jpg">Motor Shield Power and Motor Connections</a></figcaption>
</figure>

<p>Alright, so we've got all of the building blocks in place, let's assemble and see what we've got.</p>

<figure>
  <a href="https://www.alexdglover.com/assets/imag0141.jpg"><img class="size-full wp-image-120" title="Heat Seeking Robot In Progress" src="/assets/imag0141.jpg" alt="Heat Seeking Robot In Progress" width="600" height="358" /></a>
  <figcaption><a href="https://www.alexdglover.com/assets/imag0141.jpg">Heat Seeking Robot in Progress</a></figcaption>
</figure>

<p>Alright, so I attached the bread board to the top of the gearÂ box, again by cheating and using double sided tape. The Arduino/motor shield is sitting on top of the two 9v batteries, which I strapped down using a velcro strap (normally used for cable management).</p>
<p>Fast forward through some serious trial and error on writing the application, and voila! We've got... a robot that sort of heat seeks. The idea is simple - the IR thermometer moves back and forth, scanning a room for humans (or anything warmer than 80 degrees fahrenheit). It records the direction of the heat source relative to the direction the robot is facing. The robot should take that direction and adjust until the object is straight ahead of the robot, then drive forward. Heat seeking, at a primitive level.</p>
<p>My robot currently works, except that it has a fixed turn for course correction. In short, if you're 45 degrees left of the robot, the robot will turn left (as intended!) but too far left. So then the target is to the right, and it turns right (as intended!) but too far right. Since it is a static course correction, the robot never lines up perfectly with the target. Getting so close to completing the project took some of the wind out of my sails. Â So I hope you enjoyed this as anÂ interimÂ post, and I promise to finish the robot and post the sketch as well. Please comment, or feel free to share your ideas for improvements!</p>
<p>Here's the current (incomplete and very unpolished)Â version of the sketch:</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// A lot of this code is borrowed from geniuses. I'm crediting all of them up top, as they should be.</span>
<span class="c1">// ***</span>
<span class="c1">// Sweep</span>
<span class="c1">// by BARRAGAN &lt;http://barraganstudio.com&gt;</span>
<span class="c1">// This example code is in the public domain.</span>
<span class="c1">// ***</span>
<span class="c1">// ***</span>
<span class="c1">// MLX90614 IR Thermometer code taken from http://bildr.org/2011/02/mlx90614-arduino/</span>
<span class="c1">// ***</span>
<span class="c1">// Instructions for wiring thermometer here: http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1214872633</span>
<span class="c1">// RGB LED wiring and simple fading sketch: http://wiring.org.co/learning/basics/rgbled.html</span>
<span class="c1">// RGB+Arduino Project found here: http://publiclaboratory.org/es/node/593</span>
<span class="cp">#include &lt;Servo.h&gt;
#include &lt;i2cmaster.h&gt;
#include &lt;AFMotor.h&gt;&lt;/code&gt;
</span><span class="n">AF_DCMotor</span> <span class="nf">rMotor</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span> <span class="c1">// for M2 on Adafruit Motor Shield - not sure why</span>
<span class="n">AF_DCMotor</span> <span class="nf">lMotor</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span> <span class="c1">// for M1 on Adafruit Motor Shield - not sure why</span>
<span class="n">Servo</span> <span class="n">myservo</span><span class="p">;</span> <span class="c1">// create servo object to control a servo</span>
<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// variable to store the servo position</span>
<span class="kt">int</span> <span class="n">courseChange</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// variable to hold the value of how much of a course correction is needed - always less than 90</span>
<span class="c1">// set your thresholds for temperatures here - PROBABLY WON'T NEED ALL OF THESE IN MY APPLICATION</span>
<span class="kt">int</span> <span class="n">cold</span> <span class="o">=</span> <span class="mi">60</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">normal</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">hot</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
<span class="n">String</span> <span class="n">tempLabel</span> <span class="o">=</span> <span class="s">" degrees F"</span><span class="p">;</span>
<span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
<span class="p">{</span>
<span class="n">myservo</span><span class="p">.</span><span class="n">attach</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span> <span class="c1">// attaches the servo on pin 9 to the servo object</span>
<span class="c1">// turn on motors</span>
<span class="c1">//lMotor.setSpeed(100);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">RELEASE</span><span class="p">);</span>
<span class="c1">//rMotor.setSpeed(100);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">RELEASE</span><span class="p">);</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span> <span class="c1">// Begin serial output at 9600 BAUD</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"Setup..."</span><span class="p">);</span> <span class="c1">// Print a quick note to terminal</span>
<span class="n">i2c_init</span><span class="p">();</span> <span class="c1">//Initialise the i2c bus</span>
<span class="n">PORTC</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">PORTC4</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">PORTC5</span><span class="p">);</span><span class="c1">//enable pullups</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
<span class="p">{</span>
<span class="kt">int</span> <span class="n">highestTemp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// integer to hold the value of the highest temperature reading so far - will be</span>
<span class="kt">int</span> <span class="n">pointOfInterestCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//integer to hold the value of points of intersest; will divide total heading to get average heading</span>
<span class="kt">int</span> <span class="n">pointOfInterest</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">// integer, between 0 and 180, to indicate which direction the 'point of interest' is</span>
<span class="kt">int</span> <span class="n">totalPointOfInterest</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="c1">//incremented integer that is a sum of all headings; will be divided to get average heading</span>
<span class="k">for</span><span class="p">(</span><span class="n">pos</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span> <span class="n">pos</span> <span class="o">&lt;</span> <span class="mi">180</span><span class="p">;</span> <span class="n">pos</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">)</span> <span class="c1">// goes from 0 degrees to 180 degrees in steps of 1 degree</span>
<span class="p">{</span>
<span class="c1">// Insane IR Thermometer handling code - I do not pretend to understand this code.</span>
<span class="kt">int</span> <span class="n">dev</span> <span class="o">=</span> <span class="mh">0x5A</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">data_low</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">data_high</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pec</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">i2c_start_wait</span><span class="p">(</span><span class="n">dev</span><span class="o">+</span><span class="n">I2C_WRITE</span><span class="p">);</span>
<span class="n">i2c_write</span><span class="p">(</span><span class="mh">0x07</span><span class="p">);</span>
<span class="c1">// END Insane IR Thermometer handling code</span>
<span class="n">myservo</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span> <span class="c1">// tell servo to go to position in variable 'pos'</span>
<span class="c1">// IR Thermometer takes a reading</span>
<span class="n">i2c_rep_start</span><span class="p">(</span><span class="n">dev</span><span class="o">+</span><span class="n">I2C_READ</span><span class="p">);</span>
<span class="n">data_low</span> <span class="o">=</span> <span class="n">i2c_readAck</span><span class="p">();</span> <span class="c1">//Read 1 byte and then send ack</span>
<span class="n">data_high</span> <span class="o">=</span> <span class="n">i2c_readAck</span><span class="p">();</span> <span class="c1">//Read 1 byte and then send ack</span>
<span class="n">pec</span> <span class="o">=</span> <span class="n">i2c_readNak</span><span class="p">();</span>
<span class="n">i2c_stop</span><span class="p">();</span>
<span class="c1">//This converts high and low bytes together and processes temperature, MSB is a error bit and is ignored for temps</span>
<span class="kt">double</span> <span class="n">tempFactor</span> <span class="o">=</span> <span class="mi">0</span><span class="p">.</span><span class="mo">02</span><span class="p">;</span> <span class="c1">// 0.02 degrees per LSB (measurement resolution of the MLX90614)</span>
<span class="kt">double</span> <span class="n">tempData</span> <span class="o">=</span> <span class="mh">0x0000</span><span class="p">;</span> <span class="c1">// zero out the data</span>
<span class="kt">int</span> <span class="n">frac</span><span class="p">;</span> <span class="c1">// data past the decimal point</span>
<span class="c1">// This masks off the error bit of the high byte, then moves it left 8 bits and adds the low byte.</span>
<span class="n">tempData</span> <span class="o">=</span> <span class="p">(</span><span class="kt">double</span><span class="p">)(((</span><span class="n">data_high</span> <span class="o">&amp;&amp;</span> <span class="mh">0x007F</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="n">data_low</span><span class="p">);</span> <span class="n">tempData</span> <span class="o">=</span> <span class="p">(</span><span class="n">tempData</span> <span class="o">*</span> <span class="n">tempFactor</span><span class="p">)</span><span class="o">-</span><span class="mi">0</span><span class="p">.</span><span class="mo">01</span><span class="p">;</span> <span class="kt">float</span> <span class="n">celcius</span> <span class="o">=</span> <span class="n">tempData</span> <span class="o">-</span> <span class="mi">273</span><span class="p">.</span><span class="mi">15</span><span class="p">;</span> <span class="kt">float</span> <span class="n">fahrenheit</span> <span class="o">=</span> <span class="p">(</span><span class="n">celcius</span><span class="o">*</span><span class="mi">1</span><span class="p">.</span><span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="mi">32</span><span class="p">;</span> <span class="k">if</span><span class="p">(</span><span class="n">fahrenheit</span> <span class="o">&gt;</span> <span class="n">normal</span><span class="p">){</span> <span class="c1">// If the IR thermometer gets a reading greater than 60F</span>
<span class="c1">//Serial.println("above 80F"); // print to console for reference</span>
<span class="k">if</span><span class="p">(</span><span class="n">fahrenheit</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">highestTemp</span><span class="o">+</span><span class="mi">1</span><span class="p">)){</span> <span class="c1">// If the IR thermometer gets a reading that is the highest reading so far</span>
<span class="c1">//Serial.println("above 80F and the new highestTemp at"); // print to console for reference</span>
<span class="n">highestTemp</span> <span class="o">=</span> <span class="n">fahrenheit</span><span class="p">;</span> <span class="c1">// Set the 'highestTemp' variable to the new temperature</span>
<span class="n">pointOfInterest</span> <span class="o">=</span> <span class="n">pos</span><span class="p">;</span> <span class="c1">// Record the 'heading' that the servo is currently pointing</span>
<span class="c1">//Serial.println(pointOfInterest);</span>
<span class="c1">//Serial.println("degrees");</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">fahrenheit</span> <span class="o">&lt;=</span> <span class="n">cold</span><span class="p">){</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"below 60F"</span><span class="p">);</span> <span class="c1">// print to console for reference</span>
<span class="p">}</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span> <span class="c1">// waits 50ms for the servo to reach the position and for the IR thermometer to get a good reading</span>
<span class="p">}</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">highestTemp</span> <span class="o">+</span> <span class="n">tempLabel</span><span class="p">);</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">pointOfInterest</span><span class="p">);</span>
<span class="kt">uint8_t</span> <span class="n">i</span><span class="p">;</span>
<span class="n">courseChange</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">if</span><span class="p">((</span><span class="n">pointOfInterest</span> <span class="o">&lt;</span> <span class="mi">80</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pointOfInterest</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)){</span> <span class="cm">/*courseChange = 90 - pointOfInterest; i = courseChange;*/</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span> <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"to the left"</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span> <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pointOfInterest</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="p">){</span>
<span class="cm">/*courseChange = 90 - pointOfInterest;
i = courseChange;*/</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"to the right"</span><span class="p">);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="n">pointOfInterest</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pointOfInterest</span><span class="o">&lt;=</span><span class="mi">100</span><span class="p">)){</span> <span class="n">lMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span> <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"straight ahead"</span><span class="p">);</span> <span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span> <span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span> <span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="cm">/*digitalWrite(4,HIGH); digitalWrite(7, HIGH); analogWrite(5, 255); //PWM Speed Control analogWrite(6, 255); //PWM Speed Control delay(2000); analogWrite(5, 0); //PWM Speed Control analogWrite(6, 0); //PWM Speed Control */</span> <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pointOfInterest</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span> <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"No target - turning 90 degrees left"</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span> <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="p">}</span> <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="k">for</span><span class="p">(</span><span class="n">pos</span> <span class="o">=</span> <span class="mi">180</span><span class="p">;</span> <span class="n">pos</span><span class="o">&gt;=</span><span class="mi">10</span><span class="p">;</span> <span class="n">pos</span><span class="o">-=</span><span class="mi">1</span><span class="p">)</span> <span class="c1">// goes from 180 degrees to 0 degrees in steps of 1 degree</span>
<span class="p">{</span>
<span class="c1">// Insane IR Thermometer handling code - I do not pretend to understand this code.</span>
<span class="kt">int</span> <span class="n">dev</span> <span class="o">=</span> <span class="mh">0x5A</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">data_low</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">data_high</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pec</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">i2c_start_wait</span><span class="p">(</span><span class="n">dev</span><span class="o">+</span><span class="n">I2C_WRITE</span><span class="p">);</span>
<span class="n">i2c_write</span><span class="p">(</span><span class="mh">0x07</span><span class="p">);</span>
<span class="c1">// END Insane IR Thermometer handling code</span>
<span class="n">myservo</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">pos</span><span class="p">);</span> <span class="c1">// tell servo to go to position in variable 'pos'</span>
<span class="c1">// IR Thermometer takes a reading</span>
<span class="n">i2c_rep_start</span><span class="p">(</span><span class="n">dev</span><span class="o">+</span><span class="n">I2C_READ</span><span class="p">);</span>
<span class="n">data_low</span> <span class="o">=</span> <span class="n">i2c_readAck</span><span class="p">();</span> <span class="c1">//Read 1 byte and then send ack</span>
<span class="n">data_high</span> <span class="o">=</span> <span class="n">i2c_readAck</span><span class="p">();</span> <span class="c1">//Read 1 byte and then send ack</span>
<span class="n">pec</span> <span class="o">=</span> <span class="n">i2c_readNak</span><span class="p">();</span>
<span class="n">i2c_stop</span><span class="p">();</span>
<span class="c1">//This converts high and low bytes together and processes temperature, MSB is a error bit and is ignored for temps</span>
<span class="kt">double</span> <span class="n">tempFactor</span> <span class="o">=</span> <span class="mi">0</span><span class="p">.</span><span class="mo">02</span><span class="p">;</span> <span class="c1">// 0.02 degrees per LSB (measurement resolution of the MLX90614)</span>
<span class="kt">double</span> <span class="n">tempData</span> <span class="o">=</span> <span class="mh">0x0000</span><span class="p">;</span> <span class="c1">// zero out the data</span>
<span class="kt">int</span> <span class="n">frac</span><span class="p">;</span> <span class="c1">// data past the decimal point</span>
<span class="c1">// This masks off the error bit of the high byte, then moves it left 8 bits and adds the low byte.</span>
<span class="n">tempData</span> <span class="o">=</span> <span class="p">(</span><span class="kt">double</span><span class="p">)(((</span><span class="n">data_high</span> <span class="o">&amp;&amp;</span> <span class="mh">0x007F</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="n">data_low</span><span class="p">);</span> <span class="n">tempData</span> <span class="o">=</span> <span class="p">(</span><span class="n">tempData</span> <span class="o">*</span> <span class="n">tempFactor</span><span class="p">)</span><span class="o">-</span><span class="mi">0</span><span class="p">.</span><span class="mo">01</span><span class="p">;</span> <span class="kt">float</span> <span class="n">celcius</span> <span class="o">=</span> <span class="n">tempData</span> <span class="o">-</span> <span class="mi">273</span><span class="p">.</span><span class="mi">15</span><span class="p">;</span> <span class="kt">float</span> <span class="n">fahrenheit</span> <span class="o">=</span> <span class="p">(</span><span class="n">celcius</span><span class="o">*</span><span class="mi">1</span><span class="p">.</span><span class="mi">8</span><span class="p">)</span> <span class="o">+</span> <span class="mi">32</span><span class="p">;</span> <span class="k">if</span><span class="p">(</span><span class="n">fahrenheit</span> <span class="o">&gt;</span> <span class="n">normal</span><span class="p">){</span> <span class="c1">// If the IR thermometer gets a reading greater than 60F</span>
<span class="c1">//Serial.println("above 80F"); // print to console for reference</span>
<span class="k">if</span><span class="p">(</span><span class="n">fahrenheit</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">highestTemp</span><span class="o">+</span><span class="mi">1</span><span class="p">)){</span> <span class="c1">// If the IR thermometer gets a reading that is the highest reading so far</span>
<span class="c1">//Serial.println("above 80F and the new highestTemp at"); // print to console for reference</span>
<span class="n">highestTemp</span> <span class="o">=</span> <span class="n">fahrenheit</span><span class="p">;</span> <span class="c1">// Set the 'highestTemp' variable to the new temperature</span>
<span class="n">pointOfInterest</span> <span class="o">=</span> <span class="n">pos</span><span class="p">;</span> <span class="c1">// Record the 'heading' that the servo is currently pointing</span>
<span class="c1">//Serial.println(pointOfInterest);</span>
<span class="c1">//Serial.println("degrees");</span>
<span class="p">}</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">fahrenheit</span> <span class="o">&lt;=</span> <span class="n">cold</span><span class="p">){</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"below 60F"</span><span class="p">);</span> <span class="c1">// print to console for reference</span>
<span class="p">}</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span> <span class="c1">// waits 50ms for the servo to reach the position and for the IR thermometer to get a good reading</span>
<span class="p">}</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">highestTemp</span> <span class="o">+</span> <span class="n">tempLabel</span><span class="p">);</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="n">pointOfInterest</span><span class="p">);</span>
<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="n">courseChange</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="k">if</span><span class="p">((</span><span class="n">pointOfInterest</span> <span class="o">&lt;</span> <span class="mi">80</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pointOfInterest</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)){</span> <span class="cm">/*courseChange = 90 - pointOfInterest; i = courseChange;*/</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span> <span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"to the left"</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span> <span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span> <span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pointOfInterest</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="p">){</span>
<span class="cm">/*courseChange = 90 - pointOfInterest;
i = courseChange;*/</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"to the right"</span><span class="p">);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span><span class="p">((</span><span class="n">pointOfInterest</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">pointOfInterest</span><span class="o">&lt;=</span><span class="mi">100</span><span class="p">)){</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"straight ahead"</span><span class="p">);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">2000</span><span class="p">);</span>
<span class="n">lMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="cm">/*digitalWrite(4,LOW);
digitalWrite(7, LOW);
analogWrite(5, 255); //PWM Speed Control
analogWrite(6, 255); //PWM Speed Control
delay(2000);
analogWrite(5, 0); //PWM Speed Control
analogWrite(6, 0); //PWM Speed Control */</span>
<span class="p">}</span>
<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pointOfInterest</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
<span class="n">Serial</span><span class="p">.</span><span class="n">println</span><span class="p">(</span><span class="s">"No target - turning 90 degrees left"</span><span class="p">);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">FORWARD</span><span class="p">);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">255</span><span class="p">);</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
<span class="n">rMotor</span><span class="p">.</span><span class="n">setSpeed</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
<span class="n">delay</span><span class="p">(</span><span class="mi">1000</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
:ET